<?xml version="1.0"?>
<robot name="shock" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- Degree-to-radian conversions -->
  <xacro:property name="degrees_45" value="0.785398163"/>
  <xacro:property name="degrees_90" value="1.57079633"/>

  <xacro:property name="box_size" value="1" />
  <xacro:property name="shock_lower_len" value="0.30" />
  <xacro:property name="shock_lower_diam" value="0.10" />
  <xacro:property name="shock_upper_len" value="0.30" />
  <xacro:property name="shock_upper_diam" value="0.10" />

  <!-- shock_eff_limit is 2 * ((shock_stroke / 2) * shock_spring_constant) N.
       shock_stroke is 0.028575 meters. shock_spring_constant, an approximation
       of a Traxxas Ultra Shock shock absorber spring's constant, is
       437.817 N/m. -->
  <xacro:property name="shock_eff_limit" value="20"/>
  <xacro:property name="shock_vel_limit" value="1000"/>
  <xacro:property name="wheel_travel" value="0.30"/>


	<material name="chassis_mat">
		<color rgba="0.5 0.5 0.5 1"/>
	</material>
	<material name="tire_mat">
		<color rgba="0 0 0 1"/>
	</material>

  <!-- Inertia of a solid cuboid. Width is measured along the x axis, depth
       along the y axis, and height along the z axis. -->
  <xacro:macro name="solid_cuboid_inertial"
               params="width depth height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (depth * depth + height * height) / 12}"
               ixy="0" ixz="0"
               iyy="${mass * (width * width + height * height) / 12}"
               iyz="0"
               izz="${mass * (width * width + depth * depth) / 12}"/>
    </inertial>
  </xacro:macro>

  <!-- Inertia of a thick-walled cylindrical tube with open ends. Height is
       measured along the z axis, which is the tube's axis. inner_rad and
       outer_rad are the tube's inner and outer radii, respectively. -->
  <xacro:macro name="thick_walled_tube_inertial"
               params="inner_rad outer_rad height mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               ixy="0" ixz="0"
               iyy="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               iyz="0"
               izz="${mass * (inner_rad * inner_rad +
                    outer_rad * outer_rad) / 2}"/>
    </inertial>
  </xacro:macro>





  <!-- Shock absorber -->
  <xacro:macro name="create_shock">

	  <!-- Cylinder -->
	  <link name="shock_lower">
	    <visual>
	      <origin xyz="0 0 0"/>
	      <geometry>
	        <cylinder radius="${shock_lower_diam/2}" length="${shock_lower_len}"/>
	      </geometry>
	      <material name="chassis_mat"/>
	    </visual>
	    <collision>
	      <origin xyz="0 0 0"/>
	      <geometry>
	        <cylinder radius="${shock_lower_diam/2}" length="${shock_lower_len}"/>
	      </geometry>
	    </collision>
	    <xacro:thick_walled_tube_inertial
	        inner_rad="${shock_lower_diam/2 - 0.01}" outer_rad="${shock_lower_diam/2}"
	        height="${shock_lower_len}" mass="1">
	    </xacro:thick_walled_tube_inertial>
	  </link>
	  <gazebo reference="shock_lower">
	    <material>Gazebo/Grey</material>
	  </gazebo>

	  <link name="shock_upper">
	    <visual>
	      <origin xyz="0 0 0"/>
	      <geometry>
	        <cylinder radius="${shock_upper_diam/2}" length="${shock_upper_len}"/>
	      </geometry>
	      <material name="chassis_mat"/>
	    </visual>
	    <collision>
	      <origin xyz="0 0 0"/>
	      <geometry>
	        <cylinder radius="${shock_upper_diam/2}" length="${shock_upper_len}"/>
	      </geometry>
	    </collision>
	    <xacro:thick_walled_tube_inertial
	        inner_rad="${shock_upper_diam/2 - 0.01}" outer_rad="${shock_upper_diam/2}"
	        height="${shock_upper_len}" mass="1">
	    </xacro:thick_walled_tube_inertial>
	  </link>
	  <gazebo reference="shock_upper">
	    <material>Gazebo/Grey</material>
	  </gazebo> 

	    <joint name="shock_absorber" type="prismatic">
	      <parent link="shock_lower"/>
	      <child link="shock_upper"/>
	      <origin xyz="0 0 ${shock_lower_len/2 + shock_upper_len/2}" />
	      <axis xyz="0 0 -1"/>
	      <limit lower="${-wheel_travel / 2}" upper="${wheel_travel / 2}"
	             effort="${shock_eff_limit}" velocity="${shock_vel_limit}"/>
	    </joint>

	    <joint name="shock_base_block" type="fixed">
	      <parent link="base_block"/>
	      <child link="shock_lower"/>
	  	  <origin xyz="0 0 ${box_size + shock_lower_len/2}" rpy="0 0 0" />
	    </joint>

	    <transmission name="shock_absorber_trans">
	      <type>transmission_interface/SimpleTransmission</type>
	      <joint name="shock_absorber">
	        <hardwareInterface>EffortJointInterface</hardwareInterface>
	      </joint>
	      <actuator name="shock_absorber_act">
	        <!-- This hardwareInterface element exists for compatibility
	             with ROS Hydro. -->
	        <hardwareInterface>EffortJointInterface</hardwareInterface>
	        <mechanicalReduction>1</mechanicalReduction>
	      </actuator>
	    </transmission>

  </xacro:macro>



  <!-- Base Block -->
  <link name="base_block">
    <visual>
      <origin xyz="0 0 ${box_size/2}"/>
      <geometry>
        <box size="${box_size} ${box_size} ${box_size}"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
    <collision>
      <origin xyz="0 0 ${box_size/2}"/>
      <geometry>
        <box size="${box_size} ${box_size} ${box_size}"/>
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial
        width="${box_size}" depth="${box_size}"
        height="${box_size}" mass="100">
      <origin />
    </xacro:solid_cuboid_inertial>
  </link>
  <gazebo reference="base_block">
    <material>Gazebo/Grey</material>
  </gazebo>

  <!-- Create Schock -->
  <xacro:create_shock/>


  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/>
  </gazebo>



</robot>
